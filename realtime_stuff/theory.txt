//real-time system - low latency say instantly/few milli seconds
if it can guarantee that the reaction will be within a tight real-world deadline, usually in a matter of seconds or milliseconds.
examples : stock market is the best example, ATMs, chat applications
--Throughput - amount of data sent per sec over the network
can be controlled by rate limiting
//Latency - time taken for a message to travel from origin to destination
can be controlled by throttling


//Batch Processing
Batch data processing is an extremely efficient way to process large amounts of data that is collected over a period of time. 
It also helps to reduce the operational costs that businesses might spend on labor as it doesnâ€™t require specialized data entry 
clerks to support its functioning. It can be used offline and gives managers complete control as to when to start the processing,
 whether it be overnight or at the end of a week or pay period.


//Stream Processing
This method of continuous computation happens as data flows through the system with no compulsory time limitations on the output.
 With the almost instant flow, systems do not require large amounts of data to be stored.
examples: prime, netflix, youtube, gaana ad other video/audio softwares


//Real time Stream Processing
e.g: live recording, live video and audio calls, trading systems

websocket vs stomp
https://stackoverflow.com/questions/40988030/what-is-the-difference-between-websocket-and-stomp-protocols

//rabbit mq vs kafka
https://medium.com/better-programming/rabbitmq-vs-kafka-1ef22a041793 - implementation
https://medium.com/better-programming/rabbitmq-vs-kafka-1779b5b70c41 - differences and use cases

https://www.youtube.com/watch?v=PzPXRmVHMxI&ab_channel=StephaneMaarek - kafka tutorial
https://www.youtube.com/watch?v=udnX21__SuU&ab_channel=LearningJournal - kafka tutorial 1
