//How internet works:
 https://www.netnod.se/i-root/what-are-root-name-servers


//Domain Name System (DNS) is the hierarchical and decentralized naming system 
 The Internet maintains two principal namespaces: the domain name hierarchy and the IP address system
 It is used to identify computers, services, and other resources reachable through the Internet.
 DNS maintains the domain namespace and provides translation services between these two namespaces -  name servers implement the Domain Name System
/DNS ame server
most important function of DNS servers/DNS name server is the translation (resolution) of human-memorable domain names (facebook.com)
  and hostnames into the corresponding numeric Internet Protocol (IP) addresses (93.184.216.34)
A DNS name server is a server that stores the DNS records, such as address (A, AAAA) records, name server (NS) records, and mail
  exchanger (MX) records for a domain name and responds with answers to queries against its database.
/List of DNS record types
The DNS records contain domain names along with other forms of information.
A : domain/hostname - ip address
CNAME: domain - another domain/hostname
SRV : service name, host, port - ip address
NS: domain/FQDN/sub domain - ip address(one more DNS call in this ip for hostname resolution)
/root domain name: . The top hierarchy of the Domain Name System is served by the root name servers maintained by 12 organisations
 root name servers are present all over the world (since their ip addresses are fixed, they are hardcoded in all the softwares - any
 upgradation in their ip addresses needs software upgradation to reflect) Also they are present in each geography
Below the root, Internet resources are organized into a hierarchy of domains, administered by the respective registrars and domain name holders. 
/TLD : .org, .com etc
/domain name: .deshaw.com, .google.com, (google can form further sub domains like mail.google, drive.google etc)
/A fully qualified domain name (FQDN) is the complete domain name for a specific computer, or host, on the internet. The FQDN 
consists of two parts: the hostname and the domain name. For example, an FQDN for a hypothetical mail server might
 be mymail.somecollege.edu. The hostname is mymail, and the host is located within the domain somecollege.edu.
In this example, .edu is the top-level domain (TLD). This is similar to the root directory on a typical workstation, where all 
other directories (or folders) originate. (Within the .edu TLD, Indiana University Bloomington has been assigned the indiana.edu 
domain, and has authority to create subdomains within it.)
/why we need FQDN?
if you are trying to connect to a remote host that is not local to your internet service provider (ISP), you will 
 probably have to use the FQDN. For example, it's unlikely that a DNS server at Indiana University would have a listing for remote 
 hosts at another university or an unrelated ISP.


 
//client - server connection
1) On a server, a process is listening on a port. Once it gets a connection, it hands it off
 to another thread. The communication never hogs the listening port.
2) Connections are uniquely identified by the OS by the following 5-tuple: (local-IP, local-port, 
remote-IP, remote-port, protocol). If any element in the tuple is different, then this is a completely independent connection.
3) When a client connects to a server, it picks a random, unused high-order source port. 
This way, a single client can have up to ~64k connections to the server for the same destination port.


//0.0.0.0 (standard way to say ‘no particular address’) - it has a special meaning depending on the context
/In IPv4 context, the address 0.0.0.0 is a non-routable meta-address used to designate an invalid, unknown or non-applicable target.
/A way to route request to a nonexistent target instead of the original target. Often used for adblocking purposes.
/In the context of servers, 0.0.0.0 can mean "all IPv4 addresses on the local machine". If a host has two IP addresses, 
192.168.1.1 and 10.1.2.1, and a server running on the host is configured to listen on 0.0.0.0, it will be reachable at
both of those IP addresses.
note: u can have multiple ips for a single NIC, but it is recommended that no.of ip addresses assigned to a host should be
equal to the no.of NIC cards present in that machine.
/In the context of routing, 0.0.0.0 usually means the default route, i.e. the route which leads to ‘the rest of’ the Internet 
instead of somewhere on the local network.
/In routing tables
 0.0.0.0 can also appear in the gateway column. This indicates that the gateway to reach the corresponding destination subnet 
 is unspecified. This generally means that no intermediate routing hops are necessary because the system is directly connected 
 to the destination
 /In IPv6, the all-zeros address is typically represented by "::", which is the short notation of 0000:0000:0000:0000:0000:0000:0000:0000.
  The IPv6 variant serves the same purpose as its IPv4 counterpart.\\


// 127.0.0.1 (loopback IP address, also known as localhost)
/The address is used to establish an IP connection to the same machine which the user currently uses.
The primary difference is that the connection avoids using the local network interface hardware.
System administrators and application developers commonly use 127.0.0.1 to test applications.
/ Special Addresses:

      In certain contexts, it is useful to have fixed addresses with
      functional significance rather than as identifiers of specific
      hosts.

         The address zero is to be interpreted as meaning "this", as in
         "this network".

            For example, the address 0.0.0.37 could be interpreted as
            meaning host 37 on this network.

         The address of all ones are to be interpreted as meaning "all",
         as in "all hosts".

            For example, the address 128.9.255.255 could be interpreted
            as meaning all hosts on the network 128.9.

         The class A network number 127 is assigned the "loopback"
         function, that is, a datagram sent by a higher level protocol(from OSI model)
         to a network 127 address should loop back inside the host.  No
         datagram "sent" to a network 127 address should ever appear on
         any network anywhere.



