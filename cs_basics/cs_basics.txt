//factors
perfect squares - odd factors
others - even factors

//32 bit vs 64 bit
there exist two type processor i.e., 32-bit and 64-bit. These processor tells us how much memory a processor can have access from a CPU register
32 bits can refer max 2^32 bytes of memory addresses= 4GB RAM
any system having more than 4GB RAM should use 64 bit processor else RAM > 4GB gets watsed as the processor can't access it.
speed of computation: 64-bit processors can come in dual core, quad core, six core, and eight core versions

//compiler vs interpreters
interpreted code requires an interpreter to run. Therefore, without an interpreter, the source code serves as a plain text file rather than an executable program. 
executable file - code can be executed directly by the computer's processor, .exe(windows), .app(mac)
Additionally, programs written for an interpreter may not be able to use built-in system functions or access hardware resources like compiled programs can.
Therefore, most software applications are compiled rather than interpreted.
Also compiled code can be optimized before execution.

//bytecode vs assembly code
Both bytecode and assembly language  and  "intermediate languages" that fall between source code and machine code. 
The primary difference between the two is that bytecode is generated for a virtual machine (software), while assembly language is created for a CPU (hardware)
assembly language, machine code - generated specific to processor (platform dependent)
Assembly code can be converted to machine code using an assembler.
