//CLI
https://www.taniarascia.com/how-to-use-the-command-line-for-apple-macos-and-linux/
you manage a computer from the GUI/terminal -  to handle servers terminal commands are a must
terminal commands give instructions to kernel to perform tasks
(shell) - all the terminal commands are executed/processed by a shell
/available shells:
bash, PowerShell,zsh(zshell) etc - these are languages that terminal understands 
run command echo $0 to know which language is used in the terminal

https://www.tecmint.com/linux-curl-command-examples/
curl command: to transfer data to or from a server, using any of the supported protocols (HTTP, FTP, IMAP, POP3, SCP, SFTP, SMTP, TFTP, TELNET, LDAP or FILE).
SSH: for establishing a secure channel connection to a server in a unsecured network for data tranfer.
in mac  it is inbuilt but in windows u need to install a software

grep command is used to search for text strings or regular expressions within one or more files.
The basic syntax of grep is:
grep pattern target_file
1. Searching for a text string in one file - grep 'root' /etc/passwd
2. Searching for a string in multiple files - grep 'root' /etc/*

more: https://www.linuxcloudvps.com/blog/83/
pwd - print working directory
ls -a  //list all the files/folders in the current directory including hidden files
ls -l //to check permisssions drwx (delets/read/write/execute)
cd / //go to file ststem root
cd or cd ~ // go to home directory from anywhere in the file system
mkdir	//Make Directory/create a new directory
touch	//create a new file
cat	  //Concatenate	view the contents of a file
less instead of cat //to view the contents of a large file 
echo "x" >	Echo	quickly print text to a file
rm <file_name> //this will permanently delete the file - it won't send to the Trash/Recycling bin
The asterisk (*) is known as a wildcard in programming. I can choose to delete all the files of a certain filetype with a wildcard. 
For example, if I saved many .png files as .jpg, I could run rm *.png to batch delete the whole set of .png files.
rmdir <dir_name> //delete empty directory
rmd -r <dir_name> //if you want to remove a folder that has files in it
clear - clear terminal UI 
exit - exit from server if u are connected to one, else exit the terminal
which <folder/file> //gives folder/file location
whoami  //gives username
history //lists the history of commands entered in terminal
cp source destination  //copy files
cp -R	//Copy Recursively	copy a directory and all its contents
mv source destination  //move (cut and paste) files and directories
&&	And	run multiple commands

//system commands - give info about the system
uname -a //lists system details
ifconfig
top //process monitor

//vim - command line text editor commands
vim <file_name>
Hit the Esc key to enter "Normal mode". Then you can type : to enter "Command-line mode". A colon (:) will appear at the bottom of the screen and you can type in one of the following commands. To execute a command, press the Enter key.
:q to quit (short for :quit)
:q! to quit without saving (short for :quit!)
:wq to write and quit
:wq! to write and quit even if file has only read permission (if file does not have write permission: force write)
:x to write and quit (similar to :wq, but only write if there are changes)
:exit to write and exit (same as :x)
:qa to quit all (short for :quitall)
:cq to quit without saving and make Vim return non-zero error (i.e. exit with error)