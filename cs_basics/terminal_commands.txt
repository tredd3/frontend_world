//CLI
https://www.taniarascia.com/how-to-use-the-command-line-for-apple-macos-and-linux/
you manage a computer from the GUI/terminal -  to handle servers terminal commands are a must
terminal commands give instructions to kernel to perform tasks
(shell) - all the terminal commands are executed/processed by a shell
/available shells:
bash, PowerShell,zsh(zshell) etc - these are languages that terminal understands 
run command echo $0 to know which language is used in the terminal

https://www.tecmint.com/linux-curl-command-examples/
curl command: to transfer data to or from a server, using any of the supported protocols (HTTP, FTP, IMAP, POP3, SCP, SFTP, SMTP, TFTP, TELNET, LDAP or FILE).
SSH: for establishing a secure channel connection to a server in a unsecured network for data tranfer.
in mac  it is inbuilt but in windows u need to install a software like putty(ssh client)
/SSH Port Forwarding/SSH Tunneling:
Local forwarding: SSH client listens for connections on a configured port, and when it receives a connection, it tunnels the connection to an SSH server. 
e.g: Tunneling sessions and file transfers through jump servers
Remote Forwarding: SSH server forwards the connection to SSH client
e.g: exposing an internal web application to the public Internet
/jump server is a system on a network used to access and manage devices in a separate security zone like DMZ zone.
The jump server acts as a single audit point for traffic and also a single place where user accounts can be managed
make an SSH connection from the administrator's personal computer to the jump server and then use SSH forwarding to access the target machine.

grep command is used to search for text strings or regular expressions within one or more files.
The basic syntax of grep is:
grep pattern target_file
1. Searching for a text string in one file - grep 'root' /etc/passwd
2. Searching for a string in multiple files - grep 'root' /etc/*

more: https://www.linuxcloudvps.com/blog/83/
whatis <command> //e.g whatis cal
man <command>

pwd - print working directory
file <file/directory name>  //tells u what type of file it is
ls -a  //list all the files/folders in the current directory including hidden files
ls -l //to check permisssions drwx (directory/read/write/execute)
ls <absolute/relative path>
cd / //go to file ststem root
cd or cd ~ // go to home directory from anywhere in the file system
pushd <path> //to go to any directory temporarily from the current working directory
popd   //to go back to the previous working directory
cal  //prints the calendar in the terminal
mkdir	//Make Directory/create a new directory
touch	//create a new file
source //read and execute statements in a file
cat	  //Concatenate	view the contents of a file
less instead of cat //to view the contents of a large file 
nano <file_name> //to open the file in command line editor
nano //to open command line editor
echo "x" >	Echo	quickly print text to a file
rm <file_name> //this will permanently delete the file - it won't send to the Trash/Recycling bin
The asterisk (*) is known as a wildcard in programming. I can choose to delete all the files of a certain filetype with a wildcard. 
For example, if I saved many .png files as .jpg, I could run rm *.png to batch delete the whole set of .png files.
rmdir <dir_name> //delete empty directory
rmdir *  //delete all the empty folders in a given directory
rm -r <dir_name> //if you want to remove a folder and also the content inside it
clear - clear terminal UI 
exit - exit from server if u are connected to one, else exit the terminal
which <folder/file> //gives folder/file location
or locate <file/folder>  
whoami  //gives username
history //lists the history of commands entered in terminal
cp source destination  //copy files
cp -R	//Copy Recursively	copy a directory and all its contents
mv source destination  //move (cut and paste) files and directories
&&	And	run multiple commands
sudo <command> //u will run the command as a root user/ administrator
sudo -s //from now u will operate as a root user 
su - <other user> //from now u will operate as other user and can access his stuff 
                  //need to provide password of other user
users  //show the user names of users currently logged in to the current host.                  


//system commands - give info about the system
uname -a //lists system details
ifconfig
top //process monitor

//vim - command line text editor commands
vim <file_name>
Hit the Esc key to enter "Normal mode". Then you can type : to enter "Command-line mode". 
A colon (:) will appear at the bottom of the screen and you can type in one of the following commands. 
To execute a command, press the Enter key.
:q to quit (short for :quit)
:q! to quit without saving (short for :quit!)
:wq to write and quit
:wq! to write and quit even if file has only read permission (if file does not have write permission: force write)
:x to write and quit (similar to :wq, but only write if there are changes)
:exit to write and exit (same as :x)
:qa to quit all (short for :quitall)
:cq to quit without saving and make Vim return non-zero error (i.e. exit with error)