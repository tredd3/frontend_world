//google search works
Website indexing is the process of downloading data from webpages and storing it into databases by search engines. 
They do this because they need to process data to display most relevant results to their users
dbindexing - sorting the keys and having pointers to the data rows
ranking algorithm - based on so many factors like keywords location, settings, recently uploaded, flags

//how browser works - https://scotch.io/tutorials/dns-explained-how-your-browser-finds-websites
*internet connection 
*DNS lookup in the browser DNS cache. if not found then check in the recursive DNS server(using DNS protocol) maintained by ISP 
and assigned to the browser. If those servers already have the IP address we’re looking for in their cache then we are done.
*if not found our request now travels to what are called the “root name servers”.The root name servers
 are dispersed around the world, and controlled by several separate organizations.
*The root name servers redirect our request to the name servers based on top-level domain (.com or .org)
*The .com name servers will now tell us where to find the authoritative name servers for our specific domain.
*authoritative name servers are the place responsible for delivering information about our domain to the rest of the Internet
ur domain registrar or host provider usually provides this service 
*Then, we head over to the Authoritative Name Servers, who give us the record we’re looking for.
*Finally, the result is cached by the recursive DNS servers, and by our local system - and we load our page!
*“TTL” or time to live setting is simply an amount of time that the name servers will allow records 
to be cached by any of the computers who might store the information about that specific domain
TCP connection 
transfer HTTP message 
server sends the website's files to the browser as a series of small chunks called data packets
so that many different web users can download the same website at the same time. If websites were sent as single big chunks, only one user could download one at a time
browser assembles the small chunks into a complete website and displays it to you
The rendering engine
Parsing and DOM tree construction
Render tree construction
Layout
Painting
Dynamic changes
The rendering engine's threads

//js engines
first JavaScript engines were mere interpreters, but all relevant modern engines utilize just-in-time compilation for improved performance
The use of JavaScript engines is not limited to browsers. For example, the Chrome V8 engine is a core component of the popular Node.js runtime system
firefox - mozilla - spider monkey(netscape navigator)
google - chrome - V8
apple - safari - nitro
microsoft - IE -  chakra | edge - V8
Browsers have added support for WebAssembly - 4th language browsers can understand apart from html,css and js
layout engine or rendering engine: ransform HTML and css to a visual representation
gecko - mozilla
webkit - apple
chrome - blink
edge - blink


//Key Differences Between HTTP(server file system to web browser + API calls) and FTP(server file system to client file system)
server sends meta data needed to process the files by web browser via http headers
HTTP is used to access different websites on the internet,FTP is used to transfer files from one host to the another.
HTTP establishes data connection only whereas, the FTP establishes data as well as control connection.
HTTP uses the TCP’s port number 80 whereas, FTP uses TCP’s port number 20 and 21.
In case you are using HTTP, http appears in the URL of the website and if you are using FTP, ftp appears in your URL.
//why browser uses http for file transfer
HTTP is efficient to transfer smaller files like web pages whereas, FTP is efficient to transfer large files.
HTTP does not require authentication whereas, FTP servers require the user to have an account and log on to the FTP server to transfer files
Web pages or data content transferred to a device using HTTP are not saved in the memory of that device whereas, the data delivered to a device using FTP is saved in the memory of that device.
Browsers can be used to transfer files via FTP; however, Internet Explorer and other browsers do not inherently support secure file transfers via FTP mode. When you type ftp:// and log in to an FTP Server in your browser, you are transmitting your password and data in clear-text, which is not secure